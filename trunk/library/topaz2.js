// Generated by CoffeeScript 1.9.1

/*
		Topaz JavaScript Library
		http://code.google.com/p/jmodel/

		Copyright (c) 2009-2013 Richard Baker
		Dual licensed under the MIT and GPL licenses
 */
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  slice = [].slice;

define(['jmodel/emerald2'], function() {
  var Observable;
  window.Observable = Observable = Function.overload([
    Function.From(Value)(function(constructor) {
      throw new Error("Cannot make observable from " + constructor);
    })
  ]);
  window.Observable = window.Observable.extend([
    Function.From(Constructor.Inheriting(Set))(function(constructor) {
      return (function(superClass) {
        extend(_Class, superClass);

        function _Class() {
          var args;
          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          this.events = new EventRegistry(['add', 'remove', 'change']);
          this.event = Function.delegate(function() {
            return [this.events, this.events.get];
          });
          _Class.__super__.constructor.apply(this, arguments);
        }

        _Class.prototype.add = function() {
          var length;
          length = this.length;
          _Class.__super__.add.apply(this, arguments);
          if (length !== this.length) {
            this.event('add').raise(this[length]);
          }
          return this;
        };

        _Class.prototype.remove = _Class.prototype.remove.post(function(removed) {
          var i, item, results;
          results = [];
          for (i = removed.length - 1; i >= 0; i += -1) {
            item = removed[i];
            results.push(this.event('remove').raise(item));
          }
          return results;
        });

        return _Class;

      })(constructor);
    })
  ]);
  window.Observable = window.Observable.extend([
    Function.From(Constructor.Inheriting(List))(function(constructor) {
      return (function(superClass) {
        extend(_Class, superClass);

        function _Class() {
          var args;
          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          this.events = new EventRegistry(['add', 'change']);
          this.event = Function.delegate(function() {
            return [this.events, this.events.get];
          });
          _Class.__super__.constructor.apply(this, arguments);
        }

        _Class.prototype.add = _Class.prototype.add.post(function(list, item) {
          return this.event('add').raise(item);
        });

        return _Class;

      })(constructor);
    })
  ]);
  return window.Observable = window.Observable.extend([
    Function.From(Constructor.Inheriting(Map))(function(constructor) {
      return (function(superClass) {
        extend(_Class, superClass);

        function _Class() {
          var args;
          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          this.events = new EventRegistry(['add', 'remove', 'change']);
          this.event = Function.delegate(function() {
            return [this.events, this.events.get];
          });
          _Class.__super__.constructor.apply(this, arguments);
        }

        _Class.prototype.add = _Class.prototype.add.extend([
          Function.From(Scalar, Value)(Function.Chaining(function(key, value) {
            value = this.ensure(value);
            this._[key] = value;
            return this.event('add').raise(key, value);
          }))
        ]);

        _Class.prototype.remove = Function.Chaining(function(key) {
          if (this._[key] != null) {
            delete this._[key];
            return this.event('remove').raise(key);
          }
        });

        return _Class;

      })(constructor);
    })
  ]);
});

//# sourceMappingURL=topaz2.js.map
