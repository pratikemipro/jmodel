// Generated by CoffeeScript 1.6.2
/*
	Emerald JavaScript Library
	http://code.google.com/p/jmodel/

	Copyright (c) 2009-2013 Richard Baker
	Dual licensed under the MIT and GPL licenses
*/

var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __slice = [].slice;

define(['jmodel/sapphire2'], function() {
  var EventType, Subscriber;

  window.Subscriber = Subscriber = (function() {
    function Subscriber() {}

    return Subscriber;

  })();
  return window.EventType = EventType = (function(_super) {
    __extends(EventType, _super);

    function EventType() {
      var _this = this;

      EventType.__super__.constructor.call(this);
      this.subscribers = new (Set.Of(Subscriber));
      this.each(function(promise) {
        _this.subscribers.each(function(subscriber) {});
        return promise.then(subscriber.notify, subscriber.fail);
      });
    }

    EventType.prototype.subscribe = function() {
      var args, _ref;

      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return (_ref = this.subscribers).add.apply(_ref, args);
    };

    EventType.prototype.raise = function() {
      var args;

      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return this.add.apply(this, args);
    };

    EventType.prototype.fail = function() {
      var args, promise;

      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      promise = new Promise();
      this.add(promise);
      return promise.reject.apply(promise, args);
    };

    return EventType;

  })(Stream.Of(Promise));
});

/*
//@ sourceMappingURL=emerald2.map
*/
