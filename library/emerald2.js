// Generated by CoffeeScript 1.6.3
/*
		Emerald JavaScript Library
		http://code.google.com/p/jmodel/

		Copyright (c) 2009-2013 Richard Baker
		Dual licensed under the MIT and GPL licenses
*/

var __slice = [].slice,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jmodel/sapphire2'], function() {
  var Character, EventType, SpecialKey, Subscriber, codes;
  codes = {
    ':backspace': 8,
    ':tab': 9,
    ':return': 13,
    ':shift': 16,
    ':ctrl': 17,
    ':alt': 18,
    ':escape': 27,
    ':left': 37,
    ':up': 38,
    ':right': 39,
    ':down': 40,
    ':delete': 46,
    ':leftcmd': 91,
    ':rightcmd': 93
  };
  Character = String.Where(function(str) {
    return str.length === 1;
  });
  SpecialKey = String.Matching(/:.+/);
  Event.key = Function["switch"]([
    Type(Character)(function(key) {
      return function(_arg) {
        var which;
        which = _arg.which;
        return String.fromCharCode(which).toUpperCase() === key;
      };
    }), Type(RegExp)(function(regex) {
      return function(_arg) {
        var which;
        which = _arg.which;
        return String.fromCharCode(which).toUpperCase().match(regex) || false;
      };
    }), Type(Number)(function(number) {
      return function(_arg) {
        var which;
        which = _arg.which;
        return which === number;
      };
    }), Type(SpecialKey)(function(identifier) {
      return Event.key(codes[identifier]);
    }), Type(Value, [Value])(function() {
      var identifer, identifiers;
      identifer = arguments[0], identifiers = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return Event.key(identifier).or(Event.key.apply(Event, identifiers));
    })
  ]);
  window.Subscriber = Subscriber = (function() {
    function Subscriber() {}

    Subscriber.prototype.notify = function() {};

    Subscriber.prototype.fail = function() {};

    return Subscriber;

  })();
  return window.EventType = EventType = (function(_super) {
    __extends(EventType, _super);

    function EventType() {
      var _this = this;
      EventType.__super__.constructor.call(this);
      this.subscribers = new (Set.Of(Subscriber));
      this.each(function(promise) {
        return _this.subscribers.each(function(subscriber) {
          return promise.then(subscriber.notify, subscriber.fail);
        });
      });
    }

    EventType.prototype.subscribe = Function.delegate(function() {
      return [this.subscribers, this.subscribers.add];
    });

    EventType.prototype.raise = Function.delegate(function() {
      return [this, this.add];
    });

    EventType.prototype.fail = function() {
      var args, promise;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      promise = new Promise();
      this.add(promise);
      return promise.reject.apply(promise, args);
    };

    return EventType;

  })(Stream.Of(Promise));
});

/*
//@ sourceMappingURL=emerald2.map
*/
